#!/usr/bin/env php
<?php
namespace Clean\PhpDocMd;

use ReflectionClass;

const CONFIG_FILENAME = '.phpdoc-md';

require 'vendor/autoload.php';

$verbose = in_array('-v', $argv);

if (in_array('-h', $argv)) {
	echo <<<INFOBLOCK
Usage: phpdoc-md [options]

Options:
 -h    Display this help message
 -v    Verbose output
INFOBLOCK;
	exit;
}

if (!file_exists(CONFIG_FILENAME)) {
	error('Unable to load .phpdoc-md configuration file');
}

$config = require CONFIG_FILENAME;

switch ($config->format) {
	case 'github':
		$readme = new Markdown\GitHub\Readme($config->rootNamespace);
		break;
	case 'stash':
	case 'bitbucket':
		$readme = new Markdown\Stash\Readme($config->rootNamespace);
		break;
	default:
		error(sprintf("Unknown markdown format '%s'. Only 'github' or 'bitbucket' allowed. Check your .phpdoc-md config file", $config->format));
}
$allClasses = $config->classes;
if(isset($config->findAll)){
	$allClasses = getClassesInNamespace($config->findAll);
}
foreach ($allClasses as $className) {
	try {
		$reflection = new ReflectionClass($className);
		$parser = getClassInfoParser($config->format, $reflection);


		$destDir = getDestinationDirectory($reflection, $config->rootNamespace, $config->destDirectory);
		$destFile = $reflection->getShortName() . '.md';

		info("Generating $destDir/$destFile from $className", $verbose);

		if (!file_exists($destDir)) {
			mkdir($destDir, 0777, true);
		}

		file_put_contents($destDir . DIRECTORY_SEPARATOR . $destFile, $parser);

		$readme->addLink(
			removeRootNamespace($reflection->getName(), $config->rootNamespace),
			namespaceToPath(removeRootNamespace($reflection->getName(), $config->rootNamespace)) . '.md'
		);
	} catch (\Throwable $e) {
		error($e->getMessage());
	}
}

info("Generating {$config->destDirectory}/README.md - documentation entry point", $verbose);
file_put_contents($config->destDirectory . '/README.md', $readme);
info('All done', $verbose);
